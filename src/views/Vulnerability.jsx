

import React from "react";
import classNames from "classnames";
import Moment from 'react-moment';
import 'moment-timezone';

// react plugin used to create charts
import { Line, Bar } from "react-chartjs-2";
import { Pie } from 'react-chartjs-2';
// reactstrap components
import {
  Button,
  ButtonGroup,
  Card,
  CardHeader,
  CardBody,
  CardTitle,
  CardImg,
  CardSubtitle,
  CardText,
  DropdownToggle,
  DropdownMenu,
  DropdownItem,
  UncontrolledDropdown,
  Label,
  FormGroup,
  Input,
  Table,
  Row,
  Col,

  UncontrolledTooltip,
} from "reactstrap";
import './custom/vulnerability.css';

import Success from './Success';

import Notifications, { notify } from 'react-notify-toast';

import Safe from "react-safe";

class Vulnerability extends React.Component {
  constructor(props) {
    super(props);
    this.state = {

      fetchedData: "",
      togglePopup: ''
    };
  }

  totalSelectedIp = [];
  componentDidMount = async () => {
    let requireData = JSON.stringify({
      "request_id": 121,
      "namespace": "edm2019",
    });


    const settings = {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
      },
      body: requireData
    };



    const data = await fetch('https://enterprise.gydpost.com/update/dashboard', settings)
      .then(response => response.json())
      .then(json => {
        this.setState({ fetchedData: json });
        return json;
      })
      .catch(e => {
        return e
      });

    return data;
  }


  cardClicked = (event) => {
    console.log("Params.....", event);
    console.log("Selected Card APi Data: ", this.state.fetchedData.connected_devices[event].ip);
    this.totalSelectedIp.push(this.state.fetchedData.connected_devices[event].ip);
    console.log("Selected Total Ips: ", this.totalSelectedIp);

    /* Array can't be alerted */
    // alert("Selected Total Ips: ", this.state.fetchedData.connected_devices[event].ip);
  }

  // scanner=()=>{

  // }

  scanner = async () => {
    let requireData = JSON.stringify({
      "namespace": "edm2019",
      "ip_list": this.totalSelectedIp
    });


    const settings = {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
      },
      body: requireData
    };

    const data = await fetch('https://enterprise.gydpost.com/detect/vuln', settings)
      .then(response => response.json())
      .then(json => {
        this.setState({ fetchedDataSearch: json });

        alert(this.state.fetchedDataSearch && this.state.fetchedDataSearch.message)

        // this.props.history.push('/threat-management');

        return json;
      })
      .catch(e => {
        return e
      });
    // this.props.history.push('/threat-management');
    return data;
  }

  render() {

    // if(this.state.togglePopup) {
    //   return(
    //     <Success/>
    //   );
    // }
    console.log("fetchedDataSearch", this.state.fetchedDataSearch);
    // console.log("fetchedDataSearch", this.state.fetchedDataSearch.statusText);
    console.log("Fetched From Search: ", this.state.fetchedDataSearch && this.state.fetchedDataSearch);
    console.log("Fetched: ", this.state.fetchedData);

    const myArray = this.state.fetchedData.connected_devices && this.state.fetchedData.connected_devices.map((data, index) => {

      return (

        <Col md="4" key={Math.random()}>
          <Card onClick={(e) => { this.cardClicked(index) }} value="index">
            <CardHeader>
              <CardTitle>
                <FormGroup check>
                  <Label check>
                    <Input defaultValue="" type="checkbox" />
                    <span className="form-check-sign"     >
                      <span className="check" />
                    </span>
                  </Label>
                </FormGroup>


              </CardTitle>
            </CardHeader>
            <CardBody>

              <div className="row">
                <div className="col-12">
                  <i style={{ color: '#00aeff' }} className={"tim-icons " + "icon-laptop"} />
                  <span className="text-right">HOST NAME: {data.hostname}</span>
                </div>
                <div className="col-12">
                  <i style={{ color: '#00aeff' }} className={"tim-icons " + "icon-laptop"} />
                  <span className="text-left">  Device Category: {data.device_category}</span>
                </div>
                <div className="col-12">
                  <i style={{ color: '#00aeff' }} className={"tim-icons " + "icon-laptop"} />
                  <span className="text-left">   IP: {data.ip}</span>
                </div>

                <div className="col-3 offset-9">
                  <span><Moment format="YYYY/MM/DD">{data.eve_sec}</Moment></span>
                </div>

              </div>

            </CardBody>
          </Card>
        </Col>

      );
    });



    return (
      <>
        <div className="content">
          <Card className="top-card">
            <Row>
              <Col sm={12} className="text-center" style={{ fontSize: "16px", fontWeight: "bold", color: 'white' }}>
                Vulnerability
              </Col>
            </Row>
          </Card>

          <Button href="http://localhost:3000/admin/vulnerabilitymanagement" color="success" className="animation-on-hover">
            Result
</Button>
          <Button color="success" className="animation-on-hover" onClick={this.scanner}>
            Scan
          </Button>


          <Row>
            {myArray}
          </Row>
        </div>

      </>
    );
  }
}

export default Vulnerability;
